chmod

-> 리눅스 파일 사용 권한

: 데이터 읽기 (r = read)
: 데이터 쓰기 (w = write)
:  파일 실행  (x = execute)

잘못된 명령어 사용으로
시스템 운영에 중요한 역할을 하는 역할이
사소한 실수로 리눅스 시스템의 모든 파일이
삭제 되어 버릴 수도 있습니다.

이러한 문제를 방지하기 위해
권한(permission)을 개별적으로 지정할 수 있도록 만듬.

3가지 권한은
파일을 소유한 사용자(user)
특정 그룹(group)에 소속된 사용자
그 외 사용자(others)

-> chmod =  (ch + mod)
         => change + mode

//chmod 명령을 사용하여 파일의 모드(model)를 변경한다는 것은
파일의 권한을 변경한다는 결과 동일한 의미를 가진다.

--------------------------------------------------------------------

chmod [OPTION] [MODE] [FILE]
OPTION -> v,f,c,R
MODE -> u,g,o,a  0~7

[1]
파일 소유자 u , 그룹 g , 그 외 사용자 o , 모든 사용자 a
[2]
추가 + , 제거 - , 지정 = 
[3]
일기 r , 쓰기w , 실행 x

--> chmod u=rw <FILE>

-------------------------------------------------------------------

[ 파일 or 디렉토리 권한 확인. ]
파일 권한 + <number> + 파일 소유자 이름 
+ 파일 소유 그룹 이름
+ ... + ... + ...

-rwxr-x--x 1 ppotta manager    33 Jan 20 08:12 file.txt
-> 파일 소유 사용자 ppotta
-> 파일 소유 그룹 manager
-> 파일 소유 사용자(ppotta)의 권한 
-> 파일 소유 그룹(manager)의 권한
-> 그 외 사용자(others)의 권한

* 만일 읽기 권한이 없다면, "ls"명령을 수행할 때,
  "permission denied" 에러가 발생한다.

* 쓰기 권한이 있는 이유는 
  작업하고자 할 때, 필요한 권한으로 "쓰기"권한이 필요한 것
--> 쓰기 권한만 있다고 해서,
    생성, 복사, 변경, 삭제 등의 작업이 수행되지 않습니다.
    
* 실행 권한이 없다면,
-> 실행권한이란 cd명령을 통해 디렉토리에 접근할 때,
                필요한 권한이다.
--> 디렉토리에 어떤 작업(읽기,쓰기)할 때 ,
    디렉토리에 접근을 하는데, 이때 실행(x)권한이 필요
따라서 실행(x)권한 없이 (r),(w)권한을 완전히 사용 불가능.

------------------------------------------------------------------

[ 8진수(octal)형식으로 파일 모드(mode)지정 방법. ]
-> MODE 파라미터에 파일 모드(mode)를 
   표현하는 8진수 값을 사용하는 것 

[ -rwx[1]  rwx[2]   rwx[3] ]
파일 소유 사용자 권한_[1] -> 파일 소유 그룹 권한_[2] -> 그 외 사용자 권한_[3]

