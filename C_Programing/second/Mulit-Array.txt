다차원 배열(multi-dimensional array)
-> 2차원 이상의 배열
-> 배열의 요소 이나 다른 배열을 가진다는 의미
ex> 2차원 배열은 배열요소로 1차원 배열을 가지는 배열

2차원 배열(two dimensional array)
-> 배열의 요소로 1차원 배열을 가지는 배열
-> C언어는 2차원 배열을나타내는 타입이 제공이 안되,
   1차원 배열의 배열 요소로 또 다른 1차원 배열을 사용하여
   2차원 배열을 나타낼 수 있음.
int arr[2][3]
arr -> 배열에 접근하기 위한 목적을 가지고 있음.

컴퓨터 메모리
-> 입려적 공간이 아닌 선형 공간이다.



배열의 선언과 동시에 초기화하는 방법

1. 1차원 배열의 초기화 형태를 따르는 방식
int arr[열의 길이][행의 길이] 
     = {배열요소[0][0]~배열요소[n-1][n-1]}

2. 배열의 모든 요소를 초기화하는 방식
int arr[열의 길이][행의 길이] = 
{
  {배열요소[0][0], 배열요소[0][n-1],...}
  {배열요소[n-1][0], 배열요소[n-1][n-1]}
}
--> 보통 이 방식을 가장 많이 사용한다

3. 배열의 일부 요소만을 초기화하는 방식
int arr[3][4] = {
  {10,20},
  {30,40,50,60},
  {0,0,70,80}
}
-> 열의 길이를 구하는 방법
: 2차원의 배열 한행의 길이를 구한 후,
  그 값을 배열 타입의 크기로 나누어 구한다.
arr_col_len = sizeof(arr[0]/sizeof(arr[0][0]))
arr_row_len = (sizeof(arr) / arr_col_len) / sizeof(arr[0][0]);

기타. 배열의 길이 자동 설정
int arr[][4] = {
  {10,20},
  {30,40,50,60},
  {0,0,70,80}
}
--> 열의 길이를 명시하고, 행의 길이를 생락하면,
    컴파일할 때 오류가 발생하는 것을 확인 할 수 있음.
--> 반대는 가능하다???
