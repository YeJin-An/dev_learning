배열(Array)
-> 같은 타입의 변수들로 이루어진 유한집함의 정의
-> 각각의 값을 element(배열요소)
-> 배열의 위치를 가리키는 숫자는 index(인덱스)
-> c언어에서는 양의정수만을 가질 수 있음.
-> 데이터를 다루기 위한 가장 기본적인 자료구조
-> 1차원 배열부터 다차원배열까지 선언할 수 있음
-> 현실적으로 2차원배열까지 많이 사용되고 있음.

1차원배열
int grade[3];
int grade[4]=83; // 배열의 초기화
// 초기화하지 않은 배열은 쓰레기값으로 
   값이 변경되는 문제점이 발생되어 사용하지말자!!


배열의 선언과 동시에 초기화 하는 방법
int grade[5] = {'안녕','머신'};
-> 초기화 리스트 타입과 배열의 타입은 반드시 일치시켜주자.
왜냐하면
  스택형식으로 요소가 추가 되어, 나머지는 0으로 자동 초기화됨.


배열의 길이 자동 설정
int arr[] = {1,2,3};
-> 배열arr의 길이가 자동으로 
   [그리고] 동시에 초기화 리스트에 의해 초기화됨


배열의 특징
1. 배열의 길이는 반드시 상수를 사용하자.
2. 배열 요소의 인덱스는 언제나 0부터 시작한다.
3. C컴파일러는 배열의 길이를 신경쓰지 않는다.
   C컴파일러는 수식,오류까지 
               배열 요소를 이용하여 결과를 출력
// C언어로 프로그래밍 할 때,
   배열의 길이의 계산을 언제나 개발자가 직접 신경을 쓰자!
왜냐하면 컴파일러가 일일이 배열의 길이 등을 검사하여 
         오류를 출력해 주지 않습니다.


배열이 차지하는 메모리의 크기
-> 배열 요소에 특정 작업을 하고자 할때,
   해당 배열이 차지하는 메모리의 크기를 정확히 알고 있어야함.
# 수식
  int arr_len = sizeof(grade) / sizeof(grade[0]);
  printf("배열 arrGrade의 길이는 %d입니다",arr_len)
