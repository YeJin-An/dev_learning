바이트 저장 순서

1. 비트(bit)와 바이트(byte)
-> bit란?
   : 컴퓨터가 데이터를 처리하기 위한 데이터의 최소 단위
-> byte란?
   : 한 문자르 포현 할 수 있는 최소 단위



2. 바이트 저장 순서(byte order)
: 데이터를 메모리에 저장할 때, byte단위로 나눠서 저장한다.
// 연속되는 바이트를 순서대로 저장하는 걸 byte order라고 함.

-> 빅 엔디안(big endian)
: 낮은 주소에 데이터의 높은 바이트부터 저장하는 방식
(MSB, Most Significant Bit)
: 평소에 숫자를 사용하는 선형 방식과 같은 방식
: SPARC을 포함한 RLSC CPU계열에서 이 방식으로 데이터를 저장함.

-> 리틀 엔디안(little endian)
: 낮은 주소에 데이터의 낮은 바이트부터 저장하는 방식
(LSB, Least Significant Bit)
: 평소에 숫자를 사용하는 선형방식을 거꾸로 읽는 것.
: intelCPU계열에서 이 방식으로 데이터를 저장한다.

5. 빅 엔지안 VS 리틀 엔디안
: 물리적으로 데이터를 조작하거나 
  산술 연산을 수행할 때, 
  --> 리틀 엔디안 방식이 더 효율적이다.

: 데이터의 각 바이트를 배열처림 취급할 때,
  --> 빅 엔디안 방식이 더 적합하다.

** 인텔 기반의 원도우는 
   {리틀엔지안(little endian)}
** 네트워크를 통해 데이터를 전송할 때는 
   {빅 엔디안 방식(big endiam)}



6. 바이트 저장 순서의 확인
int i;
int test = 0x12345678;
char* ptr = (char*)&test;
for(i = 0; i< sizeof(int); i++){
  printf("%x", ptr[i]); }

'78 56 34 12' --> 리틀 엔디안 방식의 시스템 MSB
인텔 기반 윈도우
'12 34 56 78' -->   빅 엔디안 방식의 시스템 LSB
네트워크를 통해 데이터 전송