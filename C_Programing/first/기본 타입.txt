기본타입
-> 어떻게 처리되어야 하는지
   명시적으로 알려주는 역할을 하는 것.

-> 여러 형태의 타입을 미리 작성하여 제공
   정수형, 실수형, 문자형 타입


1. 정수형 타입__ short(2), int(4), long(4)
: 부호는 있지만, 소수는 없는 수
: unsigned는 절댓값 -> 표현되는 길이의 수는 2배,,
: signed 는 음의 정수까지 표현가능

부호를 나타내는 
최상위 비트(MSB, Most Significant Bit)
8개의 비트 중 최고값을갖는 비트를 의미,,

overflow 
-> 해당 타입의 표현할 수 있는 최대범위를 벗어난 현상
-> overflow 발생시 인접비트를 덮어 잘못된 결과를 얻음

underflow
-> 해당 타입이 표현할 수 있는 최소범위를 벗어난 현상
-> underflow 발생시 인접비트를 덮어 잘못된 결과를 얻음

// int형은 운영체제의 환경에 따라 다르다.
  16bit라면 2byte , 32bit라면 4 byte , 64bit이상은 4byte


2. 실수형 타입__ float(4), double(8), long double(8)
-> 실수란 소수부나 지수가 있는 수를 가리키는 것.
-> 실수를 표헌하는 방식은 오차가 생겨 기술적 한계를 지닌다.
Ex> float => 지수길이:8bit  가수의길이:23bit [소수  6자리]
   double => 지수길이:11bit 가수의길이:52bit [소수 15자리]


3. 문자형 타입
-> 문자 하나를 표현할 수 있는 타입
-> 어떤 문자를 어떤 숫자에 대응시킬 것인가에
   대한 약속이 필요해집니다. [ASCII]_문자 인코딩방식
(signed)char -> 1 byte -> 2^7 ~ 2 ^-7
    unsigned -> 2 byte ->   0 ~ 2^-8
// 문자다 C++ 내부적으로 아스키코드에 
   해당하는 숫자로 저장되어 있음을 보여주는 것이다.
