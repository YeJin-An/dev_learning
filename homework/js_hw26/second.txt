1. javascript 의 코드 구조

1> 코드의 빌딩 블록
- 진술 : 작업을 수행하는 구문 구성 및 명령
        세미콜론으로 구분
- 세미콜론 : 줄 바꿈이 있는 경우 생략 가능.
            [자동 세미콜론 삽입] 이라고 함.

alert ('World')
[1,4].forEach(alert);

2. 현대의 모드 'use strict'
1> 클래스와 모듈을 지원한다.
2> 이것을 사용하는 경우 지시문을 추가할 필요가 없다.

3. 언어 기능을 배우면서 
엄격 모드와 이전 모드의 차이점

4. 변수 __ let OR var
1> 고유한 이름이 붙은 데이터의 '상자'
2> 어떤 값이든 원하는 만큼 데이터를 변경할 수 있음.
3> 값이 변경되면 이전 데이터가 제거 된다.
4> 같은 변수를 2변이상 선언시 오류발생
   이유 : 변수 값 변경을 금지하는 Scala OR Erlang 
          함수형 프로그래밍 언언 존재하기 때문
5> 변수를 선언시, CamelCase -> 대문자로 시작하는 단어제외
6> 예약어 불가능
7> 되도록 영어 사용
8> 'use strict'는 변수를 사용하기 전에 정의 
   이유 : 엄격 모드에서 오류가 발생하기 때문

5. 상수 __ const
1> 재 할당 불가능
2> 변수의 값이 절대 변경되지 않는다는 것을 의미
3> 대문자로 명명된 상수는 '하드 코딩된'값의 별칭으로만 사용.
4> 추가 변수는 악이 아니라 선입니다.
  이유 : 추가변수 안한 게으른 프로그래머는 디버깅의 10배 손실

변수와 상수의 정리
1> let는 최신 변수
2> var는 구식 변수
3> const는 let과 같지만,
   const는 변수의 값을 변경할 수 없음.